---
# tasks file for rook_ceph
- name: DNS1 | Set shecan dns before download
  shell: resolvectl dns eth0 185.51.200.2 178.22.122.100 && netplan apply
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  args:
    executable: /bin/bash


- name: DNS1 | Set shecan dns before download
  shell: echo "nameserver 185.51.200.2">/etc/resolv.conf && echo "nameserver 178.22.122.100">>/etc/resolv.conf
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  args:
    executable: /bin/bash

- name: apply manifest crds.yaml & common
  shell: kubectl create -f /vagrant/rook/deploy/examples/crds.yaml -f /vagrant/rook/deploy/examples/common.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apply manifest operator rook ceph
  shell: kubectl create -f /vagrant/rook/deploy/examples/operator.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apply manifest cluster.yml
  shell: kubectl create -f /vagrant/rook/deploy/examples/cluster.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apply manifest toolbox ceph
  shell: kubectl create -f /vagrant/rook/deploy/examples/toolbox.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apply StorageClass manifest 
  shell: kubectl create -f /vagrant/rook/deploy/examples/csi/rbd/storageclass.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: apply manifest crds.yaml & common
  shell: /usr/local/bin/kubectl create -f /vagrant/rook/deploy/examples/crds.yaml -f /vagrant/rook/deploy/examples/common.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: apply manifest operator rook ceph
  shell: /usr/local/bin/kubectl create -f /vagrant/rook/deploy/examples/operator.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: apply manifest cluster.yml
  shell: /usr/local/bin/kubectl create -f /vagrant/rook/deploy/examples/cluster.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: apply manifest toolbox ceph
  shell: /usr/local/bin/kubectl create -f /vagrant/rook/deploy/examples/toolbox.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: apply StorageClass manifest 
  shell: /usr/local/bin/kubectl create -f /vagrant/rook/deploy/examples/csi/rbd/storageclass.yaml
  args:
    executable: /bin/bash
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
    - ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

